
	                          Framework.Forms

	----

	1. Introduction
	2. Form Specification
	3. Form Building
	4. Form Execution

	----

	1. Introduction

	In this document we describe a system that allow users to build and submit
	forms. This system was designed with the general goal of being a tool that
	provides users a way to specifiy and run forms in the minimum amount of 
	time possible, allowing an effective process of data intput.

	The system is comprised of two major subsystems, the building of user
	defined forms and its execution. To this end we call the whole system a
	form engine (FE).

	----

	2. Form Specification

	Forms are structures defined by:

		a) View

		Visual template where the user interface is specified.

		b) Components

		List of components used in the form, for example a text box
		for number or text input.

		c) Model

		Definition and value of the itens the form supports. The model
		if further divided into:

			c.1) Schema

			Definition of the datatypes que make up de model.

			c.2) Value

			The inputed values.

		d) Rules

		Definition of the set of rules that govern the form execution. 
		These rules are aplicable to the values of the form. They can be
		reactive or proactive. Meaning that can be applied based on some
		form event or simply called in a time interval.

		The set of rules and the specification of the rules themselves are
		what we call the form engine.

		e) Configuration

		Configuration for the form. i.e where to submit it, how it is
		submitted, etc.

		f) Resources

		Definition e value for localized resources. If for example the form
		shoudl support multiple languages.

	It is important to separate the two concepts, the first is the definition of 
	the form, what we call the form template, and the second is the form itself
	with are the values (or instance) of an form template, generally filled by
	an end user.

	----

	3. Form Building

	----

	4. Form Execution

	----
